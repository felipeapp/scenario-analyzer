package br.ufrn.sigaa.ensino.tecnico.dominio;

// Generated 13/09/2006 08:49:22 by Hibernate Tools 3.1.0.beta5

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import br.ufrn.arq.negocio.validacao.Validatable;

import br.ufrn.arq.dominio.PersistDB;
import br.ufrn.arq.negocio.validacao.ListaMensagens;
import br.ufrn.arq.util.EqualsUtil;
import br.ufrn.arq.util.HashCodeUtil;
import br.ufrn.arq.util.ValidatorUtil;


/**
 * Representa a qualificação a ser obtida pelo aluno caso
 * ele curse todas as disciplinas de determinados módulos do 
 * currículo do seu curso.
 * A qualificação tanto pode representar um certificado pela conclusão 
 * de um ou mais módulo como o diploma pela conclusão de todo o curso.
 * ModalidadeCursoTecnico generated by hbm2java
 */
@Entity
@Table(name = "qualificacao", schema = "tecnico", uniqueConstraints = {})
public class QualificacaoTecnico implements Validatable {

	/** Chave primária. */
	private int id;

	/** Descrição da Qualificação. */
	private String descricao;

	/** Indica se a Qualificação corresponde a uma Habilitação. */
	private boolean habilitacao;

	/** Indica o texto a ser exibido no certificado. */
	private String textoCertificado;

	/** Incica o Curso Técnico associado. */
	private CursoTecnico cursoTecnico = new CursoTecnico();

	/** Relacionamento entre o Módulo e a Qualificação. */
	private Set<ModuloQualificacao> moduloQualificacoes = new HashSet<ModuloQualificacao>(0);

	// Constructors

	/** default constructor */
	public QualificacaoTecnico() {
	}

	/** minimal constructor */
	public QualificacaoTecnico(int idTipoModalidade) {
		this.id = idTipoModalidade;
	}

	/** minimal constructor */
	public QualificacaoTecnico(int idTipoModalidade, String descricao) {
		this.id = idTipoModalidade;
		this.descricao = descricao;
	}

	// Property accessors
    @Id @GeneratedValue(generator="seqGenerator")
	@GenericGenerator(name="seqGenerator", strategy="br.ufrn.arq.dao.SequenceStyleGenerator",
	parameters={ @Parameter(name="hibernate_sequence", value="public.hibernate_sequence") })
	@Column(name = "id_qualificacao", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int idTipoModalidade) {
		this.id = idTipoModalidade;
	}

	@Column(name = "descricao", unique = false, nullable = false, insertable = true, updatable = true, length = 80)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}


	@Column(name = "habilitacao", unique = false, nullable = false, insertable = true, updatable = true)
	public boolean isHabilitacao() {
		return habilitacao;
	}

	public void setHabilitacao(boolean habilitacao) {
		this.habilitacao = habilitacao;
	}

	@Column(name = "texto_certificado", unique = false, nullable = false, insertable = true, updatable = true)
	public String getTextoCertificado() {
		return textoCertificado;
	}

	public void setTextoCertificado(String textoCertificado) {
		this.textoCertificado = textoCertificado;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_curso_tecnico", unique = false, nullable = true, insertable = true, updatable = true)
	public CursoTecnico getCursoTecnico() {
		return cursoTecnico;
	}

	public void setCursoTecnico(CursoTecnico cursoTecnico) {
		this.cursoTecnico = cursoTecnico;
	}

	@OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.EAGER, mappedBy = "qualificacao")
	public Set<ModuloQualificacao> getModuloQualificacoes() {
		return moduloQualificacoes;
	}

	public void setModuloQualificacoes(Set<ModuloQualificacao> moduloQualificacoes) {
		this.moduloQualificacoes = moduloQualificacoes;
	}

	/**
	 * Retorna todos os módulos.
	 * @return
	 */
	@Transient
	public Set<Modulo> getModulos() {
		Set<Modulo> modulos = new HashSet<Modulo>();
		for (ModuloQualificacao mq : getModuloQualificacoes()) {
			modulos.add(mq.getModulo());
		}
		return modulos;
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsUtil.testEquals(this, obj, "id");
	}

	@Override
	public int hashCode() {
		return HashCodeUtil.hashAll(id);
	}

	/**
	 * Validações básicas realizadas na hora de cadastrar ou alterar uma qualificação tecnica.
	 */
	@Override
	public ListaMensagens validate() {
		ListaMensagens lista = new ListaMensagens();
		ValidatorUtil.validateRequiredId(getCursoTecnico().getId(), "Curso Lato", lista);
		ValidatorUtil.validateRequired(getDescricao(), "Descrição", lista);
		ValidatorUtil.validateRequired(habilitacao, "Habilitação", lista);
		return lista;
	}

}
