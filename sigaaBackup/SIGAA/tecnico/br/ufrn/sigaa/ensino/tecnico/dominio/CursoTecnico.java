package br.ufrn.sigaa.ensino.tecnico.dominio;

// Generated 13/09/2006 08:49:22 by Hibernate Tools 3.1.0.beta5

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import br.ufrn.arq.negocio.validacao.ListaMensagens;
import br.ufrn.arq.negocio.validacao.Validatable;
import br.ufrn.arq.util.EqualsUtil;
import br.ufrn.arq.util.HashCodeUtil;
import br.ufrn.arq.util.ValidatorUtil;
import br.ufrn.sigaa.dominio.CampusIes;
import br.ufrn.sigaa.dominio.Curso;
import br.ufrn.sigaa.ensino.dominio.AreaSesu;
import br.ufrn.sigaa.ensino.dominio.ComponenteCurricular;
import br.ufrn.sigaa.ensino.dominio.SituacaoCursoHabil;
import br.ufrn.sigaa.ensino.dominio.SituacaoDiploma;
import br.ufrn.sigaa.ensino.dominio.TipoRegimeLetivo;
import br.ufrn.sigaa.ensino.dominio.TipoSistemaCurricular;
import br.ufrn.sigaa.ensino.dominio.Turno;

/**
 * CursoTecnico generated by hbm2java
 *
 * Essa classe representa não só o curso técnico, mas também
 * os cursos dos ensinos infantil e médio
 *
 */
@Entity
@Table(name = "curso_tecnico", schema = "tecnico", uniqueConstraints = {})
@PrimaryKeyJoinColumn(name="id_curso")
public class CursoTecnico extends Curso implements Validatable{

	/** Indica a forma como o diploma é emitido. */
	private SituacaoDiploma situacaoDiploma = new SituacaoDiploma();

	/** Código INEP do curso */
	private Integer codigoInep;

	/** Indica a data de ínicio de funcionamento do Curso. */
	private Date dataInicioFuncionamento;

	/** Indica a data de expiração do Curso. */
	private Date dataExtincao;

	/** Carga Horária Mínima do Curso */
	private Integer chMinima;

	/** Campus da Intituição de Ensino na qual o Curso está vinculado. */
	private CampusIes campusIes;

	/** Indica a situação atual do Curso. */
	private SituacaoCursoHabil situacaoCursoHabil = new SituacaoCursoHabil();

	/** Turno no qual ocorrem as aulas do Curso. */
	private Turno turno = new Turno();

	/** Indica o tipo de Sistema Curricular do Curso. */
	private TipoSistemaCurricular tipoSistemaCurricular = new TipoSistemaCurricular();

	/** Indica o tipo de Regime Letivo do Curso. */
	private TipoRegimeLetivo tipoRegimeLetivo = new TipoRegimeLetivo();

	/** Indica a Area Sensu do Curso. */
	private AreaSesu areaSesu;

	/** Indica o tipo de Modalidade do Curso. */
	private ModalidadeCursoTecnico modalidadeCursoTecnico = new ModalidadeCursoTecnico();

	/** Indica todas as Qualificações do Curso que poderão serem obtidas pelo Aluno. */
	private Set<QualificacaoTecnico> qualificacoes = new HashSet<QualificacaoTecnico>(0);

	/** Indica todas as Estruturas Curriculares pertencentes ao Curso. */
	private Set<EstruturaCurricularTecnica>	estruturasCurriculares = new HashSet<EstruturaCurricularTecnica>(0);

	// Constructors

	/** default constructor */
	public CursoTecnico() {
	}

	public CursoTecnico(int id) {
		setId(id);
	}

	/** minimal constructor */
	public CursoTecnico(int codigoInep, String nome) {
		this.codigoInep = codigoInep;
	}

	/** full constructor */
	public CursoTecnico(SituacaoDiploma situacaoDiploma,
			int codigoInep) {
		this.situacaoDiploma = situacaoDiploma;
		this.codigoInep = codigoInep;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_situacao_diploma", unique = false, nullable = true, insertable = true, updatable = true)
	public SituacaoDiploma getSituacaoDiploma() {
		return this.situacaoDiploma;
	}

	public void setSituacaoDiploma(SituacaoDiploma situacaoDiploma) {
		this.situacaoDiploma = situacaoDiploma;
	}

	@Column(name = "codigo_inep", unique = false, nullable = false, insertable = true, updatable = true)
	public Integer getCodigoInep() {
		return codigoInep;
	}

	public void setCodigoInep(Integer codigoInep) {
		this.codigoInep = codigoInep;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_campus", unique = false, nullable = true, insertable = true, updatable = true)
	public CampusIes getCampusIes() {
		return this.campusIes;
	}

	public void setCampusIes(CampusIes campusIes) {
		this.campusIes = campusIes;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_situacao", unique = false, nullable = true, insertable = true, updatable = true)
	public SituacaoCursoHabil getSituacaoCursoHabil() {
		return this.situacaoCursoHabil;
	}

	public void setSituacaoCursoHabil(SituacaoCursoHabil situacaoCursoHabil) {
		this.situacaoCursoHabil = situacaoCursoHabil;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_turno", unique = false, nullable = true, insertable = true, updatable = true)
	public Turno getTurno() {
		return this.turno;
	}

	public void setTurno(Turno turno) {
		this.turno = turno;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tipo_sistema_curricular", unique = false, nullable = true, insertable = true, updatable = true)
	public TipoSistemaCurricular getTipoSistemaCurricular() {
		return this.tipoSistemaCurricular;
	}

	public void setTipoSistemaCurricular(
			TipoSistemaCurricular tipoSistemaCurricular) {
		this.tipoSistemaCurricular = tipoSistemaCurricular;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tipo_regime_letivo", unique = false, nullable = true, insertable = true, updatable = true)
	public TipoRegimeLetivo getTipoRegimeLetivo() {
		return this.tipoRegimeLetivo;
	}

	public void setTipoRegimeLetivo(TipoRegimeLetivo tipoRegimeLetivo) {
		this.tipoRegimeLetivo = tipoRegimeLetivo;
	}


	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_modalidade_curso_tecnico", unique = false, nullable = true, insertable = true, updatable = true)
	public ModalidadeCursoTecnico getModalidadeCursoTecnico() {
		return modalidadeCursoTecnico;
	}

	public void setModalidadeCursoTecnico(ModalidadeCursoTecnico modalidadeCursoTecnico) {
		this.modalidadeCursoTecnico = modalidadeCursoTecnico;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "id_area_sesu", unique = false, nullable = true, insertable = true, updatable = true)
	public AreaSesu getAreaSesu() {
		return this.areaSesu;
	}

	public void setAreaSesu(AreaSesu areaSesu) {
		this.areaSesu = areaSesu;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_inicio_funcionamento", unique = false, nullable = true, insertable = true, updatable = true, length = 4)
	public Date getDataInicioFuncionamento() {
		return this.dataInicioFuncionamento;
	}

	public void setDataInicioFuncionamento(Date dataInicioFuncionamento) {
		this.dataInicioFuncionamento = dataInicioFuncionamento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_extincao", unique = false, nullable = true, insertable = true, updatable = true, length = 4)
	public Date getDataExtincao() {
		return this.dataExtincao;
	}

	public void setDataExtincao(Date dataExtincao) {
		this.dataExtincao = dataExtincao;
	}

	@Column(name = "ch_minima", unique = false, nullable = true, insertable = true, updatable = true)
	public Integer getChMinima() {
		return this.chMinima;
	}

	public void setChMinima(Integer chMinima) {
		this.chMinima = chMinima;
	}

	@OneToMany(cascade = { }, fetch = FetchType.LAZY, mappedBy = "cursoTecnico")
	public Set<QualificacaoTecnico> getQualificacoes() {
		return qualificacoes;
	}

	public void setQualificacoes(Set<QualificacaoTecnico> qualificacoes) {
		this.qualificacoes = qualificacoes;
	}

	@OneToMany(cascade = { }, fetch = FetchType.LAZY, mappedBy = "cursoTecnico")
	public Set<EstruturaCurricularTecnica> getEstruturasCurriculares() {
		return estruturasCurriculares;
	}

	public void setEstruturasCurriculares(Set<EstruturaCurricularTecnica> estruturasCurriculares) {
		this.estruturasCurriculares = estruturasCurriculares;
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsUtil.testEquals(this, obj, "id");
	}

	@Override
	public int hashCode() {
		return HashCodeUtil.hashAll(getId());
	}

	@Override
	public ListaMensagens validate() {
		ListaMensagens erros = new ListaMensagens();
		ValidatorUtil.validateRequired(getCodigo(), "Código na UFRN", erros);
		ValidatorUtil.validateRequired(getNome(), "Nome", erros);
		ValidatorUtil.validateRequired(getDataInicioFuncionamento(), "Data de Início do Funcionamento", erros);
		ValidatorUtil.validateRequired(getChMinima(), "Carga Horária Mínima", erros);
		if (getChMinima() != null) 
			ValidatorUtil.validaInt(getChMinima(), "Carga Horária Mínima", erros);
		if(isTecnico() && getModalidadeCursoTecnico().getId() != -1)
			ValidatorUtil.validateRequired(getModalidadeCursoTecnico(), "Modalidade", erros);
		ValidatorUtil.validaIntGt(getCodigoInep(), "Código no INEP", erros);
		ValidatorUtil.validateRequired(getTurno(), "Turno", erros);
		ValidatorUtil.validateRequired(getModalidadeEducacao(), "Forma de Participação do Aluno", erros);
		return erros;
	}

	@Transient
	public EstruturaCurricularTecnica getEstruturaAtiva(){
		for (EstruturaCurricularTecnica ec : getEstruturasCurriculares()) {
			if ( ec.isAtiva() ) return ec;
		}
		return null;
	}

	@Transient
	public Set<ComponenteCurricular> getDisciplinas() {
		if (getEstruturaAtiva() == null) return new HashSet<ComponenteCurricular>();
		return getEstruturaAtiva().getDisciplinas();
	}

	@Transient
	public String getCodigoNome() {
		return getCodigo() + " - " + getNome() + (getTurno() != null ? " (" + getTurno().getSigla() + ")" : "" );
	}
	
	@Transient
	public String getNomeCompleto() {
		return this.getCodigoNome();
	}
}
