# Métodos executados na primeira versão, mas não na evolução
69
io.netty.testsuite.transport.socket.SocketObjectEchoTest$2(io.netty.testsuite.transport.socket.SocketObjectEchoTest,io.netty.testsuite.transport.socket.SocketObjectEchoTest.EchoHandler)
io.netty.handler.ssl.SslHandler$CloseNotifyListener()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$SpdyEchoTestServerHandler()
io.netty.testsuite.transport.socket.SocketEchoTest$EchoHandler()
io.netty.testsuite.transport.socket.SocketSslEchoTest$2(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,boolean,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.channel.AbstractChannel$CloseFuture(io.netty.channel.AbstractChannel,io.netty.channel.AbstractChannel)
io.netty.channel.socket.nio.NioSocketChannel$1()
io.netty.channel.socket.nio.NioSocketChannel$2(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation.access$0()
io.netty.testsuite.transport.socket.SocketFileRegionTest$TestHandler(io.netty.testsuite.transport.socket.SocketFileRegionTest.TestHandler)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEcho0(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean,boolean)
io.netty.testsuite.transport.socket.SocketTestPermutation.access$1()
io.netty.bootstrap.AbstractBootstrap$1(io.netty.bootstrap.AbstractBootstrap,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$EchoHandler()
io.netty.testsuite.transport.socket.SocketObjectEchoTest$EchoHandler()
io.netty.handler.ssl.SslHandler$CloseNotifyListener(io.netty.handler.ssl.SslHandler.CloseNotifyListener)
io.netty.channel.DefaultChannelHandlerContext.invokeClose(io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.invokeWrite(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation$1.getValue()
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEchoWithChunkHandler(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketEchoTest$EchoHandler(io.netty.testsuite.transport.socket.SocketEchoTest.EchoHandler)
io.netty.channel.DefaultChannelHandlerContext$19(io.netty.channel.DefaultChannelHandlerContext)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$2(io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest,io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketStringEchoTest$2(io.netty.testsuite.transport.socket.SocketStringEchoTest,io.netty.testsuite.transport.socket.SocketStringEchoTest.StringEchoHandler)
io.netty.testsuite.transport.socket.AbstractSocketTest.run()
io.netty.testsuite.transport.socket.SocketStringEchoTest$1(io.netty.testsuite.transport.socket.SocketStringEchoTest,io.netty.testsuite.transport.socket.SocketStringEchoTest.StringEchoHandler)
io.netty.channel.DefaultChannelHandlerContext.validatePromise(io.netty.channel.ChannelFuture,boolean)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegion0(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine,java.util.concurrent.Executor)
io.netty.channel.socket.nio.NioSocketChannel.newSocket()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$SpdyEchoTestServerHandler(io.netty.testsuite.transport.socket.SocketSpdyEchoTest.SpdyEchoTestServerHandler)
io.netty.testsuite.transport.socket.SocketFileRegionTest$1()
io.netty.channel.DefaultChannelHandlerContext.flush()
io.netty.testsuite.transport.socket.SocketObjectEchoTest$EchoHandler(io.netty.testsuite.transport.socket.SocketObjectEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketTestPermutation$4.getKey()
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig(io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket)
io.netty.channel.DefaultChannelHandlerContext$15(io.netty.channel.DefaultChannelHandlerContext,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsServerHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine)
io.netty.channel.MultithreadEventLoopGroup.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext$18(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline(io.netty.channel.Channel)
io.netty.testsuite.transport.socket.SocketObjectEchoTest$1(io.netty.testsuite.transport.socket.SocketObjectEchoTest,io.netty.testsuite.transport.socket.SocketObjectEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketSslEchoTest$1(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,boolean,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketTestPermutation$8.newInstance()
io.netty.channel.ThreadPerChannelEventLoopGroup.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.channel.socket.nio.NioServerSocketChannel.newSocket()
io.netty.channel.socket.nio.NioDatagramChannel.newSocket(io.netty.channel.socket.InternetProtocolFamily)
io.netty.testsuite.transport.socket.AbstractServerSocketTest.run()
io.netty.testsuite.transport.socket.AbstractDatagramTest.run()
io.netty.testsuite.transport.socket.SocketTestPermutation$4.getValue()
io.netty.channel.ChannelOutboundBuffer(io.netty.channel.AbstractChannel)
io.netty.testsuite.transport.socket.SocketFileRegionTest$TestHandler()
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$1(io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest,io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.EchoHandler)
io.netty.channel.DefaultChannelHandlerContext.invokeFlush()
io.netty.testsuite.transport.socket.SocketTestPermutation$1.getKey()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$SpdyEchoTestClientHandler(io.netty.buffer.ByteBuf)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho0(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig(io.netty.channel.socket.SocketChannel,java.net.Socket)
io.netty.testsuite.transport.socket.SocketTestPermutation.access$2()
io.netty.testsuite.transport.socket.SocketSslEchoTest$EchoHandler(io.netty.testsuite.transport.socket.SocketSslEchoTest,boolean)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$1(io.netty.testsuite.transport.socket.SocketSpdyEchoTest,io.netty.testsuite.transport.socket.SocketSpdyEchoTest.SpdyEchoTestServerHandler)
io.netty.channel.ChannelOutboundBuffer(io.netty.channel.AbstractChannel,int)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsClientHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine)
io.netty.channel.AbstractChannel.access$3(io.netty.channel.AbstractChannel,io.netty.channel.EventLoop)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEchoWithChunkHandler()
io.netty.testsuite.transport.socket.SocketStringEchoTest$StringEchoHandler()
io.netty.testsuite.transport.socket.SocketTestPermutation.access$3()
io.netty.testsuite.transport.socket.AbstractClientSocketTest.run()
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$EchoHandler(io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.EchoHandler)
