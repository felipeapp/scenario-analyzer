# Métodos que foram executados nas duas versões
100
io.netty.testsuite.transport.socket.SocketObjectEchoTest.testObjectEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.util.BogusKeyStore.asInputStream()
io.netty.testsuite.util.BogusKeyStore.getCertificatePassword()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest.connection()
io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest$TestHandler()
io.netty.testsuite.transport.socket.SocketEchoTest$1(io.netty.testsuite.transport.socket.SocketEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest$TestHandler(io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest.TestHandler)
io.netty.testsuite.transport.socket.SocketBufReleaseTest.testBufRelease(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.util.TestUtils.getFreePort()
io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSend()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEcho()
io.netty.testsuite.util.BogusKeyStore.getKeyStorePassword()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest$TestHandler(io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.TestHandler)
io.netty.testsuite.transport.socket.DatagramMulticastTest$1(io.netty.testsuite.transport.socket.DatagramMulticastTest)
io.netty.testsuite.transport.socket.SocketTestPermutation$6.newInstance()
io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSend(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.DatagramMulticastTest.testMulticast(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.waitForActive(boolean)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketShutdownOutputBySelfTest$TestHandler()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutput(io.netty.bootstrap.ServerBootstrap)
io.netty.testsuite.transport.socket.SocketShutdownOutputBySelfTest$TestHandler(io.netty.testsuite.transport.socket.SocketShutdownOutputBySelfTest.TestHandler)
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)
io.netty.testsuite.transport.socket.SocketGatheringWriteTest.testGatheringWrite(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.DatagramUnicastTest$1(io.netty.testsuite.transport.socket.DatagramUnicastTest,java.util.concurrent.CountDownLatch)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.createFrames(int)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.waitForShutdown()
io.netty.testsuite.transport.socket.SocketObjectEchoTest.testObjectEcho()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server(java.lang.String,int)
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.toString()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegion()
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutor()
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.check()
io.netty.testsuite.util.BogusSslContextFactory.getClientContext()
io.netty.testsuite.transport.socket.DatagramMulticastTest$MulticastTestHandler.await()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutorAndVoidPromise(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.DatagramUnicastTest$2(io.netty.testsuite.transport.socket.DatagramUnicastTest)
io.netty.testsuite.util.TestUtils.isSctpSupported()
io.netty.testsuite.transport.socket.SocketGatheringWriteTest.testGatheringWriteWithComposite(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketTestPermutation$3.newInstance()
io.netty.testsuite.transport.socket.SocketEchoTest$2(io.netty.testsuite.transport.socket.SocketEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketShutdownOutputBySelfTest.testShutdownOutput(io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho()
io.netty.testsuite.transport.socket.DatagramMulticastTest$MulticastTestHandler(io.netty.testsuite.transport.socket.DatagramMulticastTest.MulticastTestHandler)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.shutdown()
io.netty.testsuite.util.BogusSslContextFactory.getServerContext()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForRunning(boolean)
io.netty.testsuite.transport.socket.SocketBufReleaseTest.access$0()
io.netty.testsuite.transport.socket.SocketTestPermutation$2.newInstance()
io.netty.testsuite.transport.socket.DatagramMulticastTest$MulticastTestHandler()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest$TestHandler()
io.netty.testsuite.transport.socket.SocketTestPermutation$7.newInstance()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithVoidPromise(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1(null)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.util.BogusTrustManagerFactory.getTrustManagers()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.access$0(io.netty.testsuite.transport.udt.UDTClientServerConnectionTest.Client)
io.netty.testsuite.transport.socket.SocketShutdownOutputBySelfTest.testShutdownOutput()
io.netty.testsuite.transport.socket.SocketGatheringWriteTest.testGatheringWriteWithComposite()
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.access$2(io.netty.testsuite.transport.socket.SocketBufReleaseTest.BufWriterHandler)
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutput()
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler(io.netty.testsuite.transport.socket.SocketBufReleaseTest.BufWriterHandler)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls()
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.newChannel()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client(java.lang.String,int)
io.netty.testsuite.transport.socket.SocketStartTlsTest$1(io.netty.testsuite.transport.socket.SocketStartTlsTest,io.netty.util.concurrent.EventExecutorGroup,io.netty.testsuite.transport.socket.SocketStartTlsTest.StartTlsServerHandler)
io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest.testWriteBeforeConnect(io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketEchoTest$3()
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegion(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.util.BogusTrustManagerFactory$1()
io.netty.testsuite.util.TestUtils.nextCandidatePort()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest$TestHandler()
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.testFixedLengthEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.shutdown()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForActive(boolean)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithVoidPromise()
io.netty.testsuite.transport.socket.SocketBufReleaseTest.testBufRelease()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutorAndVoidPromise()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutputWithoutOption(io.netty.bootstrap.ServerBootstrap)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.testFixedLengthEcho()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForShutdown()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.waitForRunning(boolean)
io.netty.testsuite.transport.socket.SocketStartTlsTest$2(io.netty.testsuite.transport.socket.SocketStartTlsTest,io.netty.util.concurrent.EventExecutorGroup,io.netty.testsuite.transport.socket.SocketStartTlsTest.StartTlsClientHandler)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionVoidPromise()
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectTimeout()
io.netty.testsuite.transport.socket.SocketGatheringWriteTest.testGatheringWrite()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest$TestHandler(io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.TestHandler)
io.netty.testsuite.transport.socket.DatagramMulticastTest.testMulticast()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectTimeout(io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutor(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionVoidPromise(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutputWithoutOption()
io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest.testWriteBeforeConnect()
io.netty.testsuite.transport.socket.SocketTestPermutation$5.newInstance()
