# Métodos que tiveram performance otimizada na evolução
83
io.netty.channel.DefaultChannelPipeline.callHandlerAdded(io.netty.channel.ChannelHandlerContext)
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.bootstrap.AbstractBootstrap.handler()
io.netty.buffer.AbstractByteBuf.writeMedium(int)
io.netty.channel.FixedRecvByteBufAllocator(int)
io.netty.channel.AbstractChannel.eventLoop()
io.netty.channel.AbstractChannel.writeAndFlush(java.lang.Object)
io.netty.channel.AdaptiveRecvByteBufAllocator()
io.netty.buffer.AbstractReferenceCountedByteBuf(int)
io.netty.buffer.AbstractByteBuf.slice(int,int)
io.netty.bootstrap.Bootstrap.doConnect0(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.close()
io.netty.channel.DefaultChannelHandlerContext.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.buffer.UnpooledHeapByteBuf.setByte(int,int)
io.netty.buffer.UnpooledHeapByteBuf._setInt(int,int)
io.netty.bootstrap.AbstractBootstrap()
io.netty.channel.DefaultChannelPipeline(io.netty.channel.Channel)
io.netty.channel.DefaultChannelPipeline.close()
io.netty.channel.ThreadPerChannelEventLoopGroup.nextChild()
io.netty.testsuite.transport.socket.SocketTestPermutation$6.newInstance()
io.netty.buffer.Unpooled.wrappedBuffer(byte[],int,int)
io.netty.channel.DefaultChannelHandlerContext.writeAndFlush(java.lang.Object)
io.netty.channel.socket.nio.NioSocketChannel.shutdownOutput()
io.netty.channel.AbstractChannel$AbstractUnsafe.register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutput()
io.netty.channel.DefaultChannelHandlerContext.executor()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutput(io.netty.bootstrap.ServerBootstrap)
io.netty.channel.DefaultChannelConfig(io.netty.channel.Channel)
io.netty.buffer.AbstractByteBuf.writeShort(int)
io.netty.channel.AbstractChannel.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.bootstrap.Bootstrap.connect()
io.netty.buffer.AbstractByteBuf.setIndex(int,int)
io.netty.channel.DefaultChannelHandlerContext.findContextOutbound()
io.netty.testsuite.transport.socket.SocketStringEchoTest$StringEchoHandler()
io.netty.channel.DefaultChannelHandlerContext.newPromise()
io.netty.testsuite.util.TestUtils.nextCandidatePort()
io.netty.channel.ChannelHandlerAdapter()
io.netty.channel.DefaultChannelHandlerContext.flush()
io.netty.bootstrap.Bootstrap.validate()
io.netty.channel.DefaultChannelHandlerContext.channel()
io.netty.channel.DefaultChannelPipeline.writeAndFlush(java.lang.Object)
io.netty.channel.DefaultChannelPipeline.generateName(io.netty.channel.ChannelHandler)
io.netty.channel.ThreadPerChannelEventLoopGroup.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator,byte[],int)
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.buffer.UnpooledHeapByteBuf.setArray(byte[])
io.netty.channel.socket.oio.OioDatagramChannel.newSocket()
io.netty.channel.ThreadPerChannelEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.close(io.netty.channel.ChannelPromise)
io.netty.bootstrap.ServerBootstrap.toString()
io.netty.channel.socket.oio.OioDatagramChannel(java.net.MulticastSocket)
io.netty.buffer.Unpooled.wrappedBuffer(byte[])
io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine,boolean,java.util.concurrent.Executor)
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface)
io.netty.testsuite.util.TestUtils.isSctpSupported()
io.netty.channel.nio.AbstractNioChannel.eventLoop()
io.netty.testsuite.transport.socket.SocketTestPermutation$3.newInstance()
io.netty.channel.socket.nio.NioServerSocketChannel.newSocket()
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt()
io.netty.channel.socket.nio.NioSocketChannel(io.netty.channel.Channel,java.nio.channels.SocketChannel)
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectTimeout()
io.netty.channel.socket.nio.NioDatagramChannel(java.nio.channels.DatagramChannel)
io.netty.channel.DefaultChannelPromise(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(io.netty.channel.ChannelHandlerContext)
io.netty.channel.ThreadPerChannelEventLoopGroup.newChild(java.lang.Object[])
io.netty.channel.DefaultChannelPipeline.checkMultiplicity(io.netty.channel.ChannelHandlerContext)
io.netty.channel.group.DefaultChannelGroup(java.lang.String,io.netty.util.concurrent.EventExecutor)
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectTimeout(io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelPipeline.addLast0(java.lang.String,io.netty.channel.DefaultChannelHandlerContext)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsClientHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine)
io.netty.channel.socket.DefaultSocketChannelConfig.setTcpNoDelay(boolean)
io.netty.channel.socket.nio.NioServerSocketChannel.javaChannel()
io.netty.bootstrap.Bootstrap.doConnect(java.net.SocketAddress,java.net.SocketAddress)
io.netty.channel.CompleteChannelFuture(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.channel.socket.nio.NioSocketChannel.shutdownOutput(io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation$5.newInstance()
io.netty.channel.SucceededChannelFuture(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.testsuite.transport.socket.SocketTestPermutation$2.newInstance()
io.netty.channel.AbstractChannel.voidPromise()
io.netty.bootstrap.AbstractBootstrap.channel(java.lang.Class)
io.netty.channel.AbstractChannel.close()
io.netty.channel.socket.nio.NioDatagramChannel.newSocket(io.netty.channel.socket.InternetProtocolFamily)
0.05
