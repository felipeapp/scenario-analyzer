# Métodos que tiveram performance otimizada na evolução
141
io.netty.bootstrap.AbstractBootstrap.localAddress(int)
io.netty.bootstrap.ServerBootstrap.group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)
io.netty.channel.AbstractChannel.pipeline()
io.netty.channel.AbstractChannel.eventLoop()
io.netty.buffer.CompositeByteBuf.capacity()
io.netty.testsuite.transport.socket.SocketBufReleaseTest.testBufRelease(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.buffer.AbstractReferenceCountedByteBuf(int)
io.netty.buffer.AbstractByteBuf.slice(int,int)
io.netty.buffer.AbstractByteBuf.writableBytes()
io.netty.channel.DefaultChannelHandlerContext.close()
io.netty.testsuite.util.TestUtils.getFreePort()
io.netty.channel.socket.DefaultDatagramChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe(io.netty.channel.oio.AbstractOioChannel,io.netty.channel.oio.AbstractOioChannel.DefaultOioUnsafe)
io.netty.buffer.AbstractByteBuf.writerIndex(int)
io.netty.bootstrap.AbstractBootstrap()
io.netty.channel.SimpleChannelInboundHandler(boolean)
io.netty.testsuite.transport.socket.SocketTestPermutation$6.newInstance()
io.netty.channel.oio.AbstractOioChannel(io.netty.channel.Channel)
io.netty.channel.ChannelOutboundBuffer$Entry()
io.netty.channel.socket.DefaultDatagramChannelConfig(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket)
io.netty.channel.AbstractChannel(io.netty.channel.Channel)
io.netty.testsuite.transport.socket.DatagramMulticastTest.testMulticast(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelHandlerContext.validatePromise(io.netty.channel.ChannelPromise,boolean)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory.newChannel()
io.netty.channel.socket.oio.OioServerSocketChannel(java.net.ServerSocket)
io.netty.channel.DefaultChannelConfig.getWriteBufferHighWaterMark()
io.netty.buffer.AbstractDerivedByteBuf(int)
io.netty.channel.socket.nio.ProtocolFamilyConverter.$SWITCH_TABLE$io$netty$channel$socket$InternetProtocolFamily()
io.netty.channel.socket.nio.ProtocolFamilyConverter.convert(io.netty.channel.socket.InternetProtocolFamily)
io.netty.bootstrap.Bootstrap.connect()
io.netty.buffer.UnpooledByteBufAllocator.newHeapBuffer(int,int)
io.netty.buffer.CompositeByteBuf.writerIndex(int)
io.netty.channel.DefaultChannelHandlerContext$WriteTask(io.netty.util.Recycler.Handle)
io.netty.channel.DefaultChannelHandlerContext.findContextOutbound()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.createFrames(int)
io.netty.bootstrap.ServerBootstrap$1(io.netty.bootstrap.ServerBootstrap,io.netty.channel.EventLoopGroup,io.netty.channel.ChannelHandler,java.util.Map.Entry[],java.util.Map.Entry[])
io.netty.testsuite.transport.socket.SocketTestPermutation$8.newInstance()
io.netty.channel.AbstractChannel.estimatorHandle()
io.netty.channel.ChannelHandlerAdapter()
io.netty.bootstrap.Bootstrap.validate()
io.netty.bootstrap.ServerBootstrap.init(io.netty.channel.Channel)
io.netty.buffer.AbstractByteBuf.writeInt(int)
io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator,byte[],int)
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.bootstrap.Bootstrap.connect(java.lang.String,int)
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.toString()
io.netty.bootstrap.AbstractBootstrap.doBind(java.net.SocketAddress)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.oio.OioDatagramChannel.newSocket()
io.netty.channel.ThreadPerChannelEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.close(io.netty.channel.ChannelPromise)
io.netty.bootstrap.AbstractBootstrap.toString()
io.netty.buffer.AbstractByteBuf.slice()
io.netty.channel.oio.AbstractOioChannel.newUnsafe()
io.netty.buffer.CompositeByteBuf.consolidateIfNeeded()
io.netty.buffer.UnpooledHeapByteBuf.capacity()
io.netty.buffer.AbstractByteBufAllocator(boolean)
io.netty.channel.socket.nio.NioServerSocketChannel.newSocket()
io.netty.channel.socket.DefaultSocketChannelConfig(io.netty.channel.socket.SocketChannel,java.net.Socket)
io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel)
io.netty.channel.socket.nio.NioServerSocketChannel()
io.netty.buffer.AbstractByteBuf.ensureAccessible()
io.netty.channel.socket.nio.NioSocketChannel(io.netty.channel.Channel,java.nio.channels.SocketChannel)
io.netty.channel.nio.AbstractNioChannel.unsafe()
io.netty.channel.DefaultChannelHandlerContext(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)
io.netty.channel.DefaultChannelPromise(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(io.netty.channel.ChannelHandlerContext)
io.netty.channel.DefaultMessageSizeEstimator(int)
io.netty.channel.group.DefaultChannelGroup(java.lang.String,io.netty.util.concurrent.EventExecutor)
io.netty.channel.DefaultChannelPipeline.addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)
io.netty.channel.DefaultChannelPipeline.addLast0(java.lang.String,io.netty.channel.DefaultChannelHandlerContext)
io.netty.channel.DefaultChannelPromise.awaitUninterruptibly()
io.netty.bootstrap.AbstractBootstrap.bind()
io.netty.bootstrap.Bootstrap.doConnect(java.net.SocketAddress,java.net.SocketAddress)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForRunning(boolean)
io.netty.buffer.AbstractByteBufAllocator.heapBuffer(int)
io.netty.testsuite.transport.socket.SocketTestPermutation$2.newInstance()
io.netty.channel.ChannelOutboundBuffer.newInstance(io.netty.channel.AbstractChannel)
io.netty.channel.AbstractChannel.close()
io.netty.channel.socket.nio.NioDatagramChannel.newSocket(io.netty.channel.socket.InternetProtocolFamily)
io.netty.channel.socket.oio.OioSocketChannel(io.netty.channel.Channel,java.net.Socket)
io.netty.channel.DefaultChannelPipeline.callHandlerAdded(io.netty.channel.ChannelHandlerContext)
io.netty.testsuite.transport.socket.SocketTestPermutation$7.newInstance()
io.netty.channel.socket.nio.NioDatagramChannelConfig.setOption0(java.lang.Object,java.lang.Object)
io.netty.buffer.AbstractByteBuf.writeByte(int)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.bootstrap.Bootstrap.toString()
io.netty.bootstrap.Bootstrap.doConnect0(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.buffer.Unpooled.copyInt(int)
io.netty.buffer.UnpooledHeapByteBuf._setInt(int,int)
io.netty.channel.socket.InternetProtocolFamily.values()
io.netty.buffer.CompositeByteBuf.addComponent(io.netty.buffer.ByteBuf)
io.netty.channel.DefaultChannelPipeline.close()
io.netty.channel.ThreadPerChannelEventLoopGroup.nextChild()
io.netty.bootstrap.Bootstrap.connect(java.net.SocketAddress)
io.netty.channel.socket.nio.NioSocketChannel.newSocket()
io.netty.channel.DefaultChannelPromise.sync()
io.netty.channel.AbstractChannel$AbstractUnsafe.register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline(io.netty.channel.AbstractChannel)
io.netty.buffer.SlicedByteBuf.slice(int,int)
io.netty.buffer.AbstractByteBuf.checkIndex(int,int)
io.netty.channel.socket.nio.NioDatagramChannelConfig.setNetworkInterface(java.net.NetworkInterface)
io.netty.buffer.AbstractByteBuf.writerIndex()
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.newChannel()
io.netty.testsuite.transport.socket.WriteBeforeRegisteredTest.testWriteBeforeConnect(io.netty.bootstrap.Bootstrap)
io.netty.buffer.Unpooled.compositeBuffer()
io.netty.testsuite.util.TestUtils.nextCandidatePort()
io.netty.handler.codec.ByteToMessageDecoder()
io.netty.buffer.AbstractByteBuf.ensureWritable(int)
io.netty.channel.DefaultChannelPipeline.generateName(io.netty.channel.ChannelHandler)
io.netty.channel.nio.AbstractNioMessageChannel.newUnsafe()
io.netty.channel.oio.AbstractOioChannel.isCompatible(io.netty.channel.EventLoop)
io.netty.channel.ChannelOutboundBuffer$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.nio.AbstractNioChannel.eventLoop()
io.netty.testsuite.transport.socket.SocketShutdownOutputByPeerTest.testShutdownOutputWithoutOption(io.netty.bootstrap.ServerBootstrap)
io.netty.buffer.CompositeByteBuf(io.netty.buffer.ByteBufAllocator,boolean,int)
io.netty.bootstrap.AbstractBootstrap.register()
io.netty.channel.ChannelHandlerAdapter.isSharable()
io.netty.channel.nio.AbstractNioByteChannel.newUnsafe()
io.netty.channel.DefaultChannelPromise.await()
io.netty.channel.socket.nio.NioDatagramChannel(java.nio.channels.DatagramChannel)
io.netty.channel.socket.oio.OioSocketChannel.isInputShutdown()
io.netty.buffer.AbstractByteBuf.readableBytes()
io.netty.buffer.Unpooled.buffer(int)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsServerHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine)
io.netty.bootstrap.AbstractBootstrap.initAndRegister()
io.netty.channel.DefaultChannelPromise.addListener(io.netty.util.concurrent.GenericFutureListener)
io.netty.channel.ThreadPerChannelEventLoopGroup.newChild(java.lang.Object[])
io.netty.buffer.Unpooled.compositeBuffer(int)
io.netty.buffer.AbstractByteBufAllocator.heapBuffer(int,int)
io.netty.buffer.CompositeByteBuf.addComponent0(int,io.netty.buffer.ByteBuf)
io.netty.channel.DefaultChannelPipeline.checkMultiplicity(io.netty.channel.ChannelHandlerContext)
io.netty.channel.DefaultChannelPipeline.addLast(io.netty.channel.ChannelHandler[])
io.netty.channel.group.DefaultChannelGroup.iterator()
io.netty.channel.ChannelOutboundBuffer.incrementPendingOutboundBytes(int)
io.netty.channel.DefaultChannelPromise.executor()
io.netty.testsuite.transport.socket.SocketTestPermutation$5.newInstance()
io.netty.channel.SucceededChannelFuture(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.bootstrap.AbstractBootstrap.channel(java.lang.Class)
io.netty.channel.DefaultChannelPipeline.addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[])
0.05
