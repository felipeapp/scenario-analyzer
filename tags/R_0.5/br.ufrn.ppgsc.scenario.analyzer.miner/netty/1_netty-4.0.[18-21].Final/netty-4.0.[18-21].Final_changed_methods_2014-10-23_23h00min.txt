# Métodos executados na evolução, mas não na primeira versão
85
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ClientHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ClientHandler)
io.netty.channel.AbstractChannelHandlerContext.safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object)
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,io.netty.channel.socket.nio.NioSocketChannel.NioSocketChannelConfig)
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.DefaultChannelHandlerContext.isInbound(io.netty.channel.ChannelHandler)
io.netty.channel.AbstractChannelHandlerContext(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutorGroup,java.lang.String,boolean,boolean)
io.netty.channel.AbstractChannelHandlerContext$WriteTask(io.netty.util.Recycler.Handle,io.netty.channel.AbstractChannelHandlerContext.WriteTask)
io.netty.channel.AbstractChannelHandlerContext.write(java.lang.Object)
io.netty.testsuite.transport.socket.SocketSslGreetingTest.testSslGreeting(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.init(io.netty.channel.AbstractChannelHandlerContext.AbstractWriteTask,io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.channel.AbstractChannelHandlerContext$WriteTask.access$1(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.handler.ssl.JdkSslServerContext.context()
io.netty.channel.AbstractChannelHandlerContext.findContextInbound()
io.netty.testsuite.transport.socket.SocketSslGreetingTest.testSslGreeting()
io.netty.channel.DefaultChannelPipeline.channel()
io.netty.testsuite.transport.socket.SocketSslEchoTest$2(io.netty.testsuite.transport.socket.SocketSslEchoTest,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.channel.AbstractChannelHandlerContext.findContextOutbound()
io.netty.channel.AbstractChannelHandlerContext.executor()
io.netty.channel.DefaultChannelPipeline$TailContext.handler()
io.netty.testsuite.transport.socket.SocketSslEchoTest$EchoHandler(boolean,boolean,boolean)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketAutoReadTest$1(io.netty.testsuite.transport.socket.SocketAutoReadTest)
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.access$1(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.channel.AbstractChannelHandlerContext.fireChannelWritabilityChanged()
io.netty.channel.DefaultChannelPipeline$HeadContext(io.netty.channel.DefaultChannelPipeline)
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1()
io.netty.channel.DefaultChannelPipeline.addLast0(java.lang.String,io.netty.channel.AbstractChannelHandlerContext)
io.netty.channel.AbstractChannelHandlerContext.channel()
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise(io.netty.channel.Channel)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelReadManualRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache.initialValue()
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask(io.netty.util.Recycler.Handle)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsServerHandler(javax.net.ssl.SSLEngine,boolean)
io.netty.channel.DefaultChannelPipeline.access$0(java.lang.Class)
io.netty.handler.ssl.JdkSslClientContext.isClient()
io.netty.channel.AbstractChannelHandlerContext.validatePromise(io.netty.channel.ChannelPromise,boolean)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig(io.netty.channel.socket.oio.OioServerSocketChannel,java.net.ServerSocket)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler$State(java.lang.String,int)
io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask(io.netty.util.Recycler.Handle)
io.netty.handler.ssl.JdkSslClientContext.nextProtocols()
io.netty.handler.ssl.JdkSslContext.wrapEngine(javax.net.ssl.SSLEngine)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ServerHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ServerHandler)
io.netty.channel.AbstractChannelHandlerContext.newPromise()
io.netty.channel.AbstractChannelHandlerContext.write(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.channel.AbstractChannelHandlerContext$WriteTask$1()
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsClientHandler(javax.net.ssl.SSLEngine,boolean)
io.netty.channel.AbstractChannelHandlerContext$WriteTask.newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.buffer.PoolThreadCache$1(io.netty.buffer.PoolThreadCache)
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask(io.netty.util.Recycler.Handle,io.netty.channel.AbstractChannelHandlerContext.WriteAndFlushTask)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelRead()
io.netty.channel.AbstractChannelHandlerContext$WriteTask(io.netty.util.Recycler.Handle)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler.await()
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket)
io.netty.channel.AbstractChannelHandlerContext.close(io.netty.channel.ChannelPromise)
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket)
io.netty.channel.DefaultChannelPipeline.generateName0(java.lang.Class)
io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask(io.netty.util.Recycler.Handle,io.netty.channel.AbstractChannelHandlerContext.AbstractWriteTask)
io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.newInstance(io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketSslEchoTest$1(io.netty.testsuite.transport.socket.SocketSslEchoTest,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,io.netty.channel.socket.nio.NioServerSocketChannel.NioServerSocketChannelConfig)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelReadManualRead()
io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(java.lang.Object)
io.netty.handler.ssl.JdkSslClientContext.context()
io.netty.handler.ssl.JdkSslServerContext.isClient()
io.netty.handler.ssl.JdkSslServerContext.nextProtocols()
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise.executor()
io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise(io.netty.channel.Channel,io.netty.bootstrap.AbstractBootstrap.PendingRegistrationPromise)
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler(io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler,io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler()
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler(io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler)
io.netty.channel.AbstractChannelHandlerContext$14(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$2(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ClientHandler)
io.netty.channel.AbstractChannelHandlerContext.write(java.lang.Object,boolean,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ServerHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest)
io.netty.handler.ssl.JdkSslContext.newEngine(io.netty.buffer.ByteBufAllocator)
io.netty.channel.DefaultChannelHandlerContext.isOutbound(io.netty.channel.ChannelHandler)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$1(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ServerHandler)
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler()
io.netty.channel.DefaultChannelPipeline$TailContext(io.netty.channel.DefaultChannelPipeline)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ClientHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest)
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig(io.netty.channel.socket.oio.OioSocketChannel,java.net.Socket)
io.netty.channel.AbstractChannelHandlerContext$10(io.netty.channel.AbstractChannelHandlerContext,io.netty.channel.AbstractChannelHandlerContext)
io.netty.channel.AbstractChannelHandlerContext.close()
io.netty.channel.AbstractChannelHandlerContext$WriteTask$1.newObject(io.netty.util.Recycler.Handle)
