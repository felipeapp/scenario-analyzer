# Métodos executados na evolução, mas não na primeira versão
95
io.netty.testsuite.transport.AbstractTestsuiteTest.newAllocators()
io.netty.buffer.AbstractByteBufAllocator.toString()
io.netty.buffer.PoolChunk.subpageIdx(int)
io.netty.buffer.PooledUnsafeDirectByteBuf.recycler()
io.netty.buffer.UnpooledUnsafeDirectByteBuf.freeDirect(java.nio.ByteBuffer)
io.netty.testsuite.transport.socket.SocketSslEchoTest$1(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.buffer.PooledByteBufAllocator(boolean)
io.netty.testsuite.transport.AbstractComboTestsuiteTest.newAllocators()
io.netty.testsuite.util.TestUtils.testMethodName(org.junit.rules.TestName)
io.netty.channel.nio.NioEventLoop(io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)
io.netty.channel.socket.DefaultSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.release()
io.netty.buffer.PooledByteBufAllocator(boolean,int,int,int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation.datagram()
io.netty.testsuite.transport.socket.SocketTestPermutation$8()
io.netty.testsuite.transport.socket.AbstractDatagramTest.configure(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.channel.DefaultChannelHandlerContext.safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object)
io.netty.channel.socket.DefaultServerSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.buffer.UnpooledUnsafeDirectByteBuf.deallocate()
io.netty.buffer.PooledByteBufAllocator$1(io.netty.buffer.PooledByteBufAllocator)
io.netty.channel.ThreadPerChannelEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.channel.MultithreadEventLoopGroup.register(io.netty.channel.Channel)
io.netty.testsuite.transport.TestsuitePermutation.allocator()
io.netty.testsuite.transport.socket.SocketTestPermutation.serverSocket()
io.netty.buffer.PoolChunkList(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunkList,int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation$1(io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory,io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory)
io.netty.testsuite.transport.socket.AbstractServerSocketTest.newFactories()
io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation$3()
io.netty.testsuite.transport.socket.SocketTestPermutation$2()
io.netty.channel.socket.DefaultServerSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketTestPermutation$6()
io.netty.buffer.PooledByteBufAllocator.validateAndCalculateChunkSize(int,int)
io.netty.channel.nio.NioEventLoopGroup(int,java.util.concurrent.ThreadFactory)
io.netty.testsuite.transport.socket.AbstractServerSocketTest.configure(io.netty.bootstrap.ServerBootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.buffer.PoolArena$DirectArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.buffer.PoolChunkList.free(io.netty.buffer.PoolChunk,long)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.$SWITCH_TABLE$io$netty$handler$codec$spdy$SpdyVersion()
io.netty.buffer.PoolArena.newSubpagePoolArray(int)
io.netty.handler.codec.spdy.SpdyVersion.values()
io.netty.channel.ThreadPerChannelEventLoopGroup$1(io.netty.channel.ThreadPerChannelEventLoopGroup)
io.netty.buffer.PooledByteBuf.recycle()
io.netty.testsuite.transport.socket.AbstractDatagramTest.newFactories()
io.netty.channel.nio.NioEventLoop.openSelector()
io.netty.buffer.WrappedByteBuf.refCnt()
io.netty.channel.ChannelException(java.lang.String)
io.netty.testsuite.transport.socket.SocketTestPermutation$5()
io.netty.channel.ChannelOption.valueOf(java.lang.String)
io.netty.handler.codec.spdy.SpdyVersion(java.lang.String,int,int,int,boolean)
io.netty.testsuite.transport.socket.SocketTestPermutation$7()
io.netty.testsuite.transport.socket.AbstractSocketTest.configure(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketTestPermutation.clientSocket()
io.netty.testsuite.transport.socket.AbstractSocketTest.newFactories()
io.netty.buffer.SimpleLeakAwareByteBuf.release()
io.netty.channel.nio.NioEventLoopGroup.newChild(java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.testsuite.transport.AbstractComboTestsuiteTest.run()
io.netty.testsuite.transport.socket.SocketTestPermutation.socket()
io.netty.channel.nio.SelectedSelectionKeySet()
io.netty.buffer.PooledByteBuf.deallocate()
io.netty.testsuite.transport.socket.SocketTestPermutation$4.newServerInstance()
io.netty.buffer.PooledByteBufAllocator.validateAndCalculatePageShifts(int)
io.netty.channel.AbstractChannel.closeFuture()
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel)
io.netty.bootstrap.AbstractBootstrap$1(io.netty.bootstrap.AbstractBootstrap,io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectCancellation()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectCancellation(io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.channel.oio.OioEventLoopGroup(int,java.util.concurrent.ThreadFactory)
io.netty.buffer.PoolSubpage.free(int)
io.netty.channel.socket.DefaultDatagramChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.buffer.PoolChunk.usage()
io.netty.channel.nio.NioEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)
io.netty.channel.DefaultChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.buffer.WrappedByteBuf.release()
io.netty.channel.MultithreadEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.channel.nio.NioEventLoop.newTaskQueue()
io.netty.buffer.PoolChunk.free(long)
io.netty.buffer.PooledByteBufAllocator.newArenaArray(int)
io.netty.testsuite.transport.socket.SocketTestPermutation$4(io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory,io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory)
io.netty.testsuite.transport.socket.SocketTestPermutation$1.newClientInstance()
io.netty.channel.ThreadPerChannelEventLoopGroup.register(io.netty.channel.Channel)
io.netty.buffer.PoolArena.newSubpagePoolHead(int)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.channel.AbstractChannel.access$1(io.netty.channel.AbstractChannel,io.netty.channel.EventLoop)
io.netty.testsuite.transport.socket.SocketTestPermutation$4.newClientInstance()
io.netty.testsuite.transport.socket.AbstractClientSocketTest.configure(io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.AbstractTestsuiteTest.run()
io.netty.testsuite.transport.socket.SocketTestPermutation$1.newServerInstance()
io.netty.buffer.AbstractReferenceCountedByteBuf.release()
io.netty.buffer.PoolArena$HeapArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.testsuite.transport.socket.SocketSslEchoTest$2(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.buffer.PoolSubpage(int)
io.netty.buffer.PoolArena.free(io.netty.buffer.PoolChunk,long)
io.netty.testsuite.transport.socket.AbstractClientSocketTest.newFactories()
