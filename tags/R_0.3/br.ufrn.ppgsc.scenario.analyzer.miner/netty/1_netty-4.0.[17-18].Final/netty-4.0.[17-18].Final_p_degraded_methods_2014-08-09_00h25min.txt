# Métodos que tiveram performance degradada na evolução
116
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask.access$1(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation.serverSocket()
io.netty.channel.AbstractChannel.writeAndFlush(java.lang.Object)
io.netty.buffer.AbstractByteBuf.copy()
io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory.toString()
io.netty.buffer.AbstractByteBuf.slice(int,int)
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask(io.netty.util.Recycler.Handle,io.netty.channel.DefaultChannelHandlerContext.WriteAndFlushTask)
io.netty.channel.DefaultChannelHandlerContext.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.close()
io.netty.testsuite.util.TestUtils.getFreePort()
io.netty.channel.ChannelInitializer()
io.netty.testsuite.transport.socket.SocketTestPermutation.clientSocket()
io.netty.channel.DefaultChannelConfig.setOptions(java.util.Map)
io.netty.testsuite.transport.socket.SocketTestPermutation$6.newInstance()
io.netty.channel.socket.DefaultDatagramChannelConfig(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket)
io.netty.channel.group.CombinedIterator.hasNext()
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.buffer.SlicedByteBuf.capacity()
io.netty.channel.DefaultChannelHandlerContext.validatePromise(io.netty.channel.ChannelPromise,boolean)
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object)
io.netty.buffer.AbstractDerivedByteBuf(int)
io.netty.channel.DefaultChannelConfig.getWriteBufferHighWaterMark()
io.netty.buffer.CompositeByteBuf.writerIndex(int)
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPromise.setSuccess()
io.netty.channel.DefaultChannelHandlerContext.newPromise()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.waitForShutdown()
io.netty.channel.ChannelHandlerAdapter()
io.netty.channel.DefaultChannelHandlerContext.channel()
io.netty.bootstrap.Bootstrap.validate()
io.netty.bootstrap.ServerBootstrap.init(io.netty.channel.Channel)
io.netty.buffer.AbstractDerivedByteBuf.refCnt()
io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator,byte[],int)
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.toString()
io.netty.testsuite.transport.socket.SocketCancelWriteTest$TestHandler()
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler()
io.netty.channel.socket.oio.OioDatagramChannel.newSocket()
io.netty.channel.DefaultChannelHandlerContext.close(io.netty.channel.ChannelPromise)
io.netty.channel.nio.NioEventLoop.newTaskQueue()
io.netty.bootstrap.AbstractBootstrap.toString()
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.release()
io.netty.buffer.AbstractByteBuf.slice()
io.netty.channel.MultithreadEventLoopGroup.next()
io.netty.channel.oio.AbstractOioChannel.newUnsafe()
io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.testsuite.util.TestUtils.isSctpSupported()
io.netty.testsuite.transport.socket.SocketTestPermutation.datagram()
io.netty.testsuite.transport.socket.SocketTestPermutation$3.newInstance()
io.netty.channel.DefaultChannelPipeline.write(java.lang.Object)
io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel)
io.netty.channel.DefaultChannelPromise(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.channel.AbstractChannel.isRegistered()
io.netty.testsuite.transport.socket.SocketTestPermutation.socket()
io.netty.channel.DefaultMessageSizeEstimator(int)
io.netty.channel.group.DefaultChannelGroup(java.lang.String,io.netty.util.concurrent.EventExecutor)
io.netty.channel.DefaultChannelPipeline.addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)
io.netty.channel.DefaultChannelPipeline.addLast0(java.lang.String,io.netty.channel.DefaultChannelHandlerContext)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForRunning(boolean)
io.netty.channel.DefaultChannelHandlerContext$WriteTask.newInstance(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation$2.newInstance()
io.netty.channel.ChannelOutboundBuffer.newInstance(io.netty.channel.AbstractChannel)
io.netty.channel.AbstractChannel.close()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.socket.oio.OioSocketChannel(io.netty.channel.Channel,java.net.Socket)
io.netty.testsuite.transport.socket.SocketTestPermutation$7.newInstance()
io.netty.channel.DefaultChannelPromise.checkDeadLock()
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,io.netty.channel.ChannelPromise)
io.netty.buffer.PooledByteBuf.deallocate()
io.netty.bootstrap.Bootstrap.toString()
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Client.access$0(io.netty.testsuite.transport.udt.UDTClientServerConnectionTest.Client)
io.netty.bootstrap.Bootstrap.doConnect0(io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext.safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object)
io.netty.channel.DefaultChannelHandlerContext$AbstractWriteTask(io.netty.util.Recycler.Handle)
io.netty.buffer.CompositeByteBuf.addComponent(io.netty.buffer.ByteBuf)
io.netty.channel.ThreadPerChannelEventLoopGroup.nextChild()
io.netty.channel.DefaultChannelPipeline.close()
io.netty.channel.DefaultChannelHandlerContext$WriteTask.access$1(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.buffer.AbstractByteBuf.order(java.nio.ByteOrder)
io.netty.channel.DefaultChannelHandlerContext.writeAndFlush(java.lang.Object)
io.netty.buffer.SlicedByteBuf.slice(int,int)
io.netty.buffer.AbstractByteBuf.checkIndex(int,int)
io.netty.channel.AbstractChannel.write(java.lang.Object)
io.netty.buffer.AbstractByteBuf.writerIndex()
io.netty.testsuite.transport.socket.SocketTestPermutation$1.newServerInstance()
io.netty.testsuite.transport.socket.AbstractDatagramTest.newFactories()
io.netty.buffer.AbstractReferenceCountedByteBuf.release()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask.newInstance(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.buffer.UnpooledUnsafeDirectByteBuf.deallocate()
io.netty.channel.socket.DefaultServerSocketChannelConfig(io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket)
io.netty.channel.AbstractChannel$AbstractUnsafe$1(io.netty.channel.AbstractChannel.AbstractUnsafe,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline.writeAndFlush(java.lang.Object)
io.netty.channel.DefaultChannelPipeline.generateName(io.netty.channel.ChannelHandler)
io.netty.channel.nio.AbstractNioMessageChannel.newUnsafe()
io.netty.channel.ThreadPerChannelEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.channel.oio.AbstractOioChannel.isCompatible(io.netty.channel.EventLoop)
io.netty.channel.ChannelOutboundBuffer$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.nio.NioEventLoop.wakeup(boolean)
io.netty.channel.socket.oio.OioDatagramChannel(java.net.MulticastSocket)
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface)
io.netty.bootstrap.AbstractBootstrap.register()
io.netty.buffer.UnpooledHeapByteBuf.copy(int,int)
io.netty.buffer.EmptyByteBuf(io.netty.buffer.ByteBufAllocator,java.nio.ByteOrder)
io.netty.channel.ChannelHandlerAdapter.isSharable()
io.netty.channel.nio.AbstractNioByteChannel.newUnsafe()
io.netty.channel.socket.DefaultDatagramChannelConfig.setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator)
io.netty.buffer.SlicedByteBuf.order()
io.netty.channel.ChannelOutboundBuffer(io.netty.util.Recycler.Handle)
io.netty.buffer.CompositeByteBuf.addComponent0(int,io.netty.buffer.ByteBuf)
io.netty.channel.DefaultChannelPipeline.checkMultiplicity(io.netty.channel.ChannelHandlerContext)
io.netty.channel.SingleThreadEventLoop.wakesUpForTask(java.lang.Runnable)
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object,boolean,io.netty.channel.ChannelPromise)
io.netty.buffer.AbstractByteBuf(int)
io.netty.channel.DefaultChannelPromise.executor()
io.netty.channel.DefaultChannelHandlerContext$WriteTask$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.DefaultChannelPipeline.addLast(io.netty.util.concurrent.EventExecutorGroup,io.netty.channel.ChannelHandler[])
0.05
