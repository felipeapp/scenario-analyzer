# Métodos executados na evolução, mas não na primeira versão
287
io.netty.testsuite.transport.AbstractTestsuiteTest.newAllocators()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask.access$1(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithVoidPromiseNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelHandlerContext$AbstractWriteTask(io.netty.util.Recycler.Handle,io.netty.channel.DefaultChannelHandlerContext.AbstractWriteTask)
io.netty.buffer.CompositeByteBuf.capacity()
io.netty.buffer.AbstractByteBufAllocator.toString()
io.netty.testsuite.transport.socket.DatagramUnicastTest$3(io.netty.testsuite.transport.socket.DatagramUnicastTest,java.util.concurrent.CountDownLatch)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ClientHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ClientHandler)
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,io.netty.channel.socket.nio.NioSocketChannel.NioSocketChannelConfig)
io.netty.channel.ChannelOutboundBuffer$Entry()
io.netty.buffer.UnpooledHeapByteBuf.getByte(int)
io.netty.buffer.PoolThreadCache$MemoryRegionCache.add(io.netty.buffer.PoolChunk,long)
io.netty.buffer.PooledUnsafeDirectByteBuf.recycler()
io.netty.buffer.UnpooledUnsafeDirectByteBuf.freeDirect(java.nio.ByteBuffer)
io.netty.testsuite.transport.socket.SocketSslEchoTest$1(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.buffer.PooledByteBufAllocator(boolean)
io.netty.channel.socket.nio.NioSocketChannel.newSocket(java.nio.channels.spi.SelectorProvider)
io.netty.buffer.AbstractByteBuf.equals(java.lang.Object)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$SpdyEchoTestClientHandler(io.netty.buffer.ByteBuf,boolean)
io.netty.testsuite.transport.AbstractComboTestsuiteTest.newAllocators()
io.netty.buffer.AbstractDerivedByteBuf.refCnt()
io.netty.testsuite.util.TestUtils.testMethodName(org.junit.rules.TestName)
io.netty.channel.nio.NioEventLoop(io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEcho0(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean,boolean,boolean)
io.netty.channel.socket.DefaultSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind()
io.netty.testsuite.transport.socket.SocketTestPermutation$3(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler.release()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$1(io.netty.handler.codec.spdy.SpdyVersion,io.netty.testsuite.transport.socket.SocketSpdyEchoTest.SpdyEchoTestServerHandler)
io.netty.buffer.PooledByteBufAllocator(boolean,int,int,int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation.datagram()
io.netty.channel.DefaultMessageSizeEstimator$HandleImpl(int,io.netty.channel.DefaultMessageSizeEstimator.HandleImpl)
io.netty.testsuite.transport.socket.SocketSslGreetingTest.testSslGreeting(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketTestPermutation$2(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.testsuite.transport.socket.SocketObjectEchoTest$1(io.netty.testsuite.transport.socket.SocketObjectEchoTest.EchoHandler)
io.netty.channel.DefaultChannelHandlerContext.fireChannelWritabilityChanged()
io.netty.buffer.PooledByteBufAllocator(boolean,int,int,int,int,int,int,int)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithVoidPromiseNotAutoRead()
io.netty.testsuite.transport.socket.AbstractDatagramTest.configure(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketSslGreetingTest.testSslGreeting()
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.DefaultDatagramChannelConfig.getOption(io.netty.channel.ChannelOption)
io.netty.channel.DefaultChannelHandlerContext.safeExecute(io.netty.util.concurrent.EventExecutor,java.lang.Runnable,io.netty.channel.ChannelPromise,java.lang.Object)
io.netty.buffer.CompositeByteBuf.addComponent(io.netty.buffer.ByteBuf)
io.netty.channel.DefaultChannelHandlerContext$WriteTask.access$1(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline(io.netty.channel.AbstractChannel)
io.netty.buffer.PooledByteBufAllocator(boolean,int,int,int,int,int,int,int,long)
io.netty.channel.AbstractChannel.write(java.lang.Object)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutorNotAutoRead()
io.netty.buffer.PoolThreadCache.log2(int)
io.netty.buffer.CompositeByteBuf$Component(io.netty.buffer.CompositeByteBuf,io.netty.buffer.ByteBuf)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.socket.DefaultServerSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.buffer.UnpooledUnsafeDirectByteBuf.deallocate()
io.netty.channel.ThreadPerChannelEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.testsuite.transport.socket.SocketTestPermutation$4(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.channel.MultithreadEventLoopGroup.register(io.netty.channel.Channel)
io.netty.buffer.PoolArena.isTinyOrSmall(int)
io.netty.buffer.ByteBufUtil.equals(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)
io.netty.channel.ChannelHandlerAdapter$1()
io.netty.channel.DefaultChannelHandlerContext$AbstractWriteTask.init(io.netty.channel.DefaultChannelHandlerContext.AbstractWriteTask,io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.buffer.PooledByteBufAllocator.access$3(io.netty.buffer.PooledByteBufAllocator)
io.netty.buffer.SlicedByteBuf.order()
io.netty.buffer.PoolArena$DirectArena.isDirect()
io.netty.testsuite.transport.TestsuitePermutation.allocator()
io.netty.channel.ChannelOutboundBuffer(io.netty.util.Recycler.Handle)
io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache(int)
io.netty.testsuite.transport.socket.SocketTestPermutation$7(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.channel.ChannelOutboundBuffer$Entry(io.netty.channel.ChannelOutboundBuffer.Entry)
io.netty.channel.SingleThreadEventLoop.wakesUpForTask(java.lang.Runnable)
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache.set(io.netty.buffer.PoolThreadCache)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,io.netty.handler.codec.spdy.SpdyVersion,boolean)
io.netty.testsuite.transport.socket.SocketFileRegionTest$TestHandler(boolean)
io.netty.testsuite.transport.socket.SocketAutoReadTest$1(io.netty.testsuite.transport.socket.SocketAutoReadTest)
io.netty.testsuite.transport.socket.SocketTestPermutation.serverSocket()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask(io.netty.util.Recycler.Handle,io.netty.channel.DefaultChannelHandlerContext.WriteAndFlushTask)
io.netty.buffer.PoolChunkList(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunkList,int,int)
io.netty.channel.socket.nio.NioServerSocketChannel(java.nio.channels.ServerSocketChannel)
io.netty.testsuite.transport.socket.AbstractServerSocketTest.newFactories()
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoNotAutoRead()
io.netty.channel.DefaultChannelHandlerContext.validatePromise(io.netty.channel.ChannelPromise,boolean)
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object)
io.netty.channel.DefaultChannelHandlerContext$WriteTask(io.netty.util.Recycler.Handle)
io.netty.channel.AbstractChannel$AbstractUnsafe.outboundBuffer()
io.netty.buffer.SlicedByteBuf.unwrap()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEchoNotAutoRead()
io.netty.buffer.PooledByteBufAllocator.access$6()
io.netty.testsuite.transport.socket.SocketObjectEchoTest$EchoHandler(boolean)
io.netty.channel.AbstractChannel.estimatorHandle()
io.netty.channel.ChannelOutboundBuffer(io.netty.util.Recycler.Handle,io.netty.channel.ChannelOutboundBuffer)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketCancelWriteTest$TestHandler(io.netty.testsuite.transport.socket.SocketCancelWriteTest.TestHandler)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionNotAutoRead()
io.netty.testsuite.transport.socket.SocketObjectEchoTest.testObjectEchoNotAutoRead()
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache$ReleaseCacheTask(io.netty.buffer.PooledByteBufAllocator.PoolThreadLocalCache,io.netty.buffer.PooledByteBufAllocator.PoolThreadLocalCache.ReleaseCacheTask)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelReadManualRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelHandlerContext.findContextInbound()
io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.buffer.CompositeByteBuf.consolidateIfNeeded()
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTlsNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.DefaultServerSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketTestPermutation$4.newInstance()
io.netty.channel.DefaultMessageSizeEstimator.newHandle()
io.netty.buffer.PooledByteBufAllocator.validateAndCalculateChunkSize(int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask(io.netty.util.Recycler.Handle)
io.netty.channel.nio.NioEventLoopGroup(int,java.util.concurrent.ThreadFactory)
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask$1.newObject(io.netty.util.Recycler.Handle)
io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig(io.netty.channel.socket.oio.OioServerSocketChannel,java.net.ServerSocket)
io.netty.testsuite.transport.socket.AbstractServerSocketTest.configure(io.netty.bootstrap.ServerBootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.buffer.PoolArena$DirectArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.$SWITCH_TABLE$io$netty$handler$codec$spdy$SpdyVersion()
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache$ReleaseCacheTask(io.netty.buffer.PooledByteBufAllocator.PoolThreadLocalCache)
io.netty.buffer.PoolThreadCache.cache(io.netty.buffer.PoolThreadCache.MemoryRegionCache[],int)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.testFixedLengthEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelHandlerContext$AbstractWriteTask(io.netty.util.Recycler.Handle)
io.netty.buffer.PoolThreadCache.createNormalCaches(int,int,io.netty.buffer.PoolArena)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionVoidPromiseNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.buffer.PoolArena.newSubpagePoolArray(int)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler$State(java.lang.String,int)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsServerHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine,boolean)
io.netty.handler.codec.spdy.SpdyVersion.values()
io.netty.channel.DefaultChannelPipeline.fireChannelWritabilityChanged()
io.netty.channel.ThreadPerChannelEventLoopGroup$1(io.netty.channel.ThreadPerChannelEventLoopGroup)
io.netty.buffer.EmptyByteBuf.readableBytes()
io.netty.buffer.PoolThreadCache$MemoryRegionCache.powerOfTwo(int)
io.netty.buffer.PooledByteBuf.recycle()
io.netty.buffer.PooledByteBufAllocator.access$5()
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultMessageSizeEstimator$HandleImpl(int)
io.netty.testsuite.transport.socket.AbstractDatagramTest.newFactories()
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEchoNotAutoRead()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask.newInstance(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.channel.nio.NioEventLoop.openSelector()
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ServerHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ServerHandler)
io.netty.buffer.PooledByteBufAllocator.access$2(io.netty.buffer.PooledByteBufAllocator)
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry(io.netty.buffer.PoolThreadCache.MemoryRegionCache.Entry)
io.netty.channel.ChannelOutboundBuffer$1.newObject(io.netty.util.Recycler.Handle)
io.netty.buffer.WrappedByteBuf.refCnt()
io.netty.bootstrap.AbstractBootstrap.register()
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegion0(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean,boolean)
io.netty.channel.ChannelException(java.lang.String)
io.netty.buffer.PoolThreadCache$MemoryRegionCache.nextIdx(int)
io.netty.buffer.Unpooled.buffer()
io.netty.testsuite.transport.socket.SocketStringEchoTest$StringEchoHandler(boolean)
io.netty.channel.ChannelOption.valueOf(java.lang.String)
io.netty.buffer.Unpooled.compositeBuffer(int)
io.netty.buffer.PoolThreadCache.createSubPageCaches(int,int)
io.netty.testsuite.transport.socket.SocketStartTlsTest$StartTlsClientHandler(io.netty.testsuite.transport.socket.SocketStartTlsTest,javax.net.ssl.SSLEngine,boolean)
io.netty.channel.DefaultChannelHandlerContext.write(java.lang.Object,boolean,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelHandlerContext$10(io.netty.channel.DefaultChannelHandlerContext,io.netty.channel.DefaultChannelHandlerContext)
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache(io.netty.buffer.PooledByteBufAllocator,long)
io.netty.buffer.PoolArena.smallIdx(int)
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry()
io.netty.testsuite.transport.socket.AbstractSocketTest.configure(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketTestPermutation.clientSocket()
io.netty.buffer.PoolThreadCache$MemoryRegionCache(int)
io.netty.buffer.PooledByteBufAllocator.access$1(io.netty.buffer.PooledByteBufAllocator)
io.netty.channel.DefaultChannelHandlerContext$14(io.netty.channel.DefaultChannelHandlerContext,io.netty.channel.DefaultChannelHandlerContext,io.netty.channel.ChannelPromise)
io.netty.channel.socket.DefaultDatagramChannelConfig.setActiveOnOpen(boolean)
io.netty.buffer.PoolThreadCache.add(io.netty.buffer.PoolArena,io.netty.buffer.PoolChunk,long,int)
io.netty.testsuite.transport.socket.AbstractSocketTest.newFactories()
io.netty.channel.DefaultChannelHandlerContext$WriteAndFlushTask$1()
io.netty.buffer.SimpleLeakAwareByteBuf.release()
io.netty.channel.nio.NioEventLoopGroup.newChild(java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.testsuite.transport.socket.SocketCancelWriteTest$TestHandler()
io.netty.channel.socket.nio.NioDatagramChannel.checkJavaVersion()
io.netty.buffer.AbstractByteBuf.slice()
io.netty.buffer.AbstractByteBufAllocator.heapBuffer()
io.netty.testsuite.transport.AbstractComboTestsuiteTest.run()
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$2(io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.EchoHandler)
io.netty.channel.DefaultChannelPipeline.write(java.lang.Object)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTlsNotAutoRead()
io.netty.channel.DefaultAddressedEnvelope.content()
io.netty.testsuite.transport.socket.SocketTestPermutation.socket()
io.netty.channel.DefaultMessageSizeEstimator(int)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEchoNotAutoRead()
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig.setSoTimeout(int)
io.netty.channel.DefaultChannelConfig.getMessageSizeEstimator()
io.netty.channel.DefaultChannelHandlerContext$WriteTask.newInstance(io.netty.channel.DefaultChannelHandlerContext,java.lang.Object,int,io.netty.channel.ChannelPromise)
io.netty.buffer.PoolThreadCache(io.netty.buffer.PoolArena,io.netty.buffer.PoolArena,int,int,int,int,int)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelRead()
io.netty.channel.ChannelOutboundBuffer.newInstance(io.netty.channel.AbstractChannel)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler.await()
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket)
io.netty.channel.nio.SelectedSelectionKeySet()
io.netty.buffer.PooledByteBuf.deallocate()
io.netty.channel.ChannelHandlerAdapter$1.initialValue()
io.netty.handler.codec.spdy.SpdyVersion(java.lang.String,int,int,int)
io.netty.testsuite.transport.socket.SocketObjectEchoTest.testObjectEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket)
io.netty.buffer.AbstractByteBuf.order(java.nio.ByteOrder)
io.netty.buffer.PooledByteBufAllocator.validateAndCalculatePageShifts(int)
io.netty.buffer.SlicedByteBuf.slice(int,int)
io.netty.testsuite.transport.socket.SocketObjectEchoTest.testObjectEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setSoTimeout(int)
io.netty.buffer.Unpooled.compositeBuffer()
io.netty.testsuite.transport.socket.SocketTestPermutation$1(io.netty.testsuite.transport.socket.SocketTestPermutation,io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory,io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory)
io.netty.channel.ChannelOutboundBuffer$1()
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache$ReleaseCacheTask.access$1(io.netty.buffer.PooledByteBufAllocator.PoolThreadLocalCache.ReleaseCacheTask)
io.netty.buffer.AbstractByteBuf.readerIndex()
io.netty.buffer.PoolThreadCache.cacheForSmall(io.netty.buffer.PoolArena,int)
io.netty.buffer.UnpooledHeapByteBuf._getByte(int)
io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig(io.netty.channel.socket.nio.NioServerSocketChannel,io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,io.netty.channel.socket.nio.NioServerSocketChannel.NioServerSocketChannelConfig)
io.netty.testsuite.transport.socket.SocketAutoReadTest.testAutoReadDisableOutsideChannelReadManualRead()
io.netty.testsuite.transport.socket.SocketCancelWriteTest.testCancelWrite()
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel)
io.netty.testsuite.transport.socket.SocketObjectEchoTest$2(io.netty.testsuite.transport.socket.SocketObjectEchoTest.EchoHandler)
io.netty.bootstrap.AbstractBootstrap$1(io.netty.bootstrap.AbstractBootstrap,io.netty.channel.ChannelFuture,io.netty.channel.Channel,java.net.SocketAddress,io.netty.channel.ChannelPromise)
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectCancellation()
io.netty.buffer.UnpooledHeapByteBuf.order()
io.netty.testsuite.transport.socket.SocketConnectionAttemptTest.testConnectCancellation(io.netty.bootstrap.Bootstrap)
io.netty.buffer.CompositeByteBuf(io.netty.buffer.ByteBufAllocator,boolean,int)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.channel.oio.OioEventLoopGroup(int,java.util.concurrent.ThreadFactory)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.testFixedLengthEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.socket.nio.NioDatagramChannel.newSocket(java.nio.channels.spi.SelectorProvider,io.netty.channel.socket.InternetProtocolFamily)
io.netty.channel.ChannelOutboundBuffer.incrementPendingOutboundBytes(int)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.testFixedLengthEchoNotAutoRead()
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler(io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler,io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler)
io.netty.testsuite.transport.socket.SocketAutoReadTest$ServerTestHandler()
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler(io.netty.testsuite.transport.socket.SocketAutoReadTest.TestHandler)
io.netty.channel.socket.nio.NioSocketChannel$1(io.netty.channel.socket.nio.NioSocketChannel,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.socket.DefaultDatagramChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$2(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ClientHandler)
io.netty.channel.nio.NioEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)
io.netty.channel.DefaultChannelConfig.setAllocator(io.netty.buffer.ByteBufAllocator)
io.netty.buffer.WrappedByteBuf.release()
io.netty.channel.DefaultChannelConfig.getWriteBufferHighWaterMark()
io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache.get()
io.netty.buffer.CompositeByteBuf.writerIndex(int)
io.netty.testsuite.transport.socket.SocketFileRegionTest$1(boolean)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ServerHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest)
io.netty.channel.DefaultChannelHandlerContext$WriteTask(io.netty.util.Recycler.Handle,io.netty.channel.DefaultChannelHandlerContext.WriteTask)
io.netty.channel.DefaultChannelHandlerContext$WriteTask$1()
io.netty.channel.MultithreadEventLoopGroup(int,java.util.concurrent.ThreadFactory,java.lang.Object[])
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.nio.NioEventLoop.newTaskQueue()
io.netty.buffer.CompositeByteBuf.checkComponentIndex(int)
io.netty.buffer.PoolArena.isTiny(int)
io.netty.buffer.PooledByteBufAllocator.newArenaArray(int)
io.netty.buffer.PoolArena.free(io.netty.buffer.PoolChunk,long,int)
io.netty.testsuite.transport.socket.SocketSslGreetingTest$1(io.netty.testsuite.transport.socket.SocketSslGreetingTest,io.netty.testsuite.transport.socket.SocketSslGreetingTest.ServerHandler)
io.netty.buffer.PooledByteBufAllocator.access$4(io.netty.buffer.PooledByteBufAllocator)
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$1(io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest.EchoHandler)
io.netty.testsuite.transport.socket.SocketTestPermutation.combo(java.util.List,java.util.List)
io.netty.testsuite.transport.socket.SocketTestPermutation$1.newClientInstance()
io.netty.testsuite.transport.socket.DatagramUnicastTest$4(io.netty.testsuite.transport.socket.DatagramUnicastTest)
io.netty.testsuite.transport.socket.SocketStringEchoTest$2(io.netty.testsuite.transport.socket.SocketStringEchoTest.StringEchoHandler)
io.netty.channel.ThreadPerChannelEventLoopGroup.register(io.netty.channel.Channel)
io.netty.buffer.PoolArena.newSubpagePoolHead(int)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.channel.AbstractChannel.access$1(io.netty.channel.AbstractChannel,io.netty.channel.EventLoop)
io.netty.testsuite.transport.socket.SocketTestPermutation$6(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.testsuite.transport.socket.SocketAutoReadTest$TestHandler()
io.netty.testsuite.transport.socket.AbstractClientSocketTest.configure(io.netty.bootstrap.Bootstrap,io.netty.buffer.ByteBufAllocator)
io.netty.testsuite.transport.socket.SocketSslEchoTest$EchoHandler(io.netty.testsuite.transport.socket.SocketSslEchoTest,boolean,boolean,boolean)
io.netty.testsuite.transport.AbstractTestsuiteTest.run()
io.netty.testsuite.transport.socket.SocketFixedLengthEchoTest$EchoHandler(boolean)
io.netty.testsuite.transport.socket.SocketTestPermutation$1.newServerInstance()
io.netty.testsuite.transport.socket.SocketSslGreetingTest$ClientHandler(io.netty.testsuite.transport.socket.SocketSslGreetingTest)
io.netty.testsuite.transport.socket.SocketFileRegionTest.testFileRegionVoidPromiseNotAutoRead()
io.netty.buffer.AbstractReferenceCountedByteBuf.release()
io.netty.testsuite.transport.socket.SocketTestPermutation$5(io.netty.testsuite.transport.socket.SocketTestPermutation)
io.netty.buffer.PooledByteBufAllocator.access$0(io.netty.buffer.PooledByteBufAllocator)
io.netty.buffer.PoolArena$HeapArena(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)
io.netty.testsuite.transport.socket.SocketStringEchoTest$1(io.netty.testsuite.transport.socket.SocketStringEchoTest.StringEchoHandler)
io.netty.testsuite.transport.socket.SocketSslEchoTest$2(io.netty.testsuite.transport.socket.SocketSslEchoTest,javax.net.ssl.SSLEngine,java.util.concurrent.ExecutorService,io.netty.testsuite.transport.socket.SocketSslEchoTest.EchoHandler)
io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache(int)
io.netty.testsuite.transport.socket.SocketEchoTest.testSimpleEchoWithAdditionalExecutorNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.nio.NioServerSocketChannel.newSocket(java.nio.channels.spi.SelectorProvider)
io.netty.channel.socket.oio.DefaultOioSocketChannelConfig(io.netty.channel.socket.oio.OioSocketChannel,java.net.Socket)
io.netty.buffer.PoolSubpage(int)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest$SpdyEchoTestServerHandler(boolean)
io.netty.buffer.CompositeByteBuf.addComponent0(int,io.netty.buffer.ByteBuf)
io.netty.testsuite.transport.socket.AbstractClientSocketTest.newFactories()
io.netty.testsuite.transport.socket.SocketCancelWriteTest.testCancelWrite(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultMessageSizeEstimator$HandleImpl.size(java.lang.Object)
io.netty.testsuite.transport.socket.SocketEchoTest$EchoHandler(boolean)
io.netty.channel.DefaultChannelHandlerContext$WriteTask$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.AbstractChannel$CloseFuture(io.netty.channel.AbstractChannel)
