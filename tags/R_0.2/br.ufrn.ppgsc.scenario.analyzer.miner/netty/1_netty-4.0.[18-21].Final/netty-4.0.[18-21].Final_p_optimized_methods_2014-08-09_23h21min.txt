# Métodos que tiveram performance otimizada na evolução
124
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEchoNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.AbstractChannel.writeAndFlush(java.lang.Object)
io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory.toString()
io.netty.buffer.AbstractByteBuf.slice(int,int)
io.netty.buffer.AbstractByteBufAllocator.toString()
io.netty.channel.DefaultChannelPipeline.get(java.lang.Class)
io.netty.channel.ChannelInitializer()
io.netty.channel.DefaultChannelConfig.setOptions(java.util.Map)
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.channel.ChannelOutboundBuffer$Entry()
io.netty.channel.oio.AbstractOioChannel(io.netty.channel.Channel)
io.netty.channel.socket.DefaultDatagramChannelConfig(io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket)
io.netty.channel.group.CombinedIterator.hasNext()
io.netty.channel.AbstractChannel(io.netty.channel.Channel)
io.netty.channel.DefaultChannelPipeline.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.buffer.SlicedByteBuf.capacity()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.AbstractChannel.writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelConfig.getWriteBufferHighWaterMark()
io.netty.buffer.AbstractDerivedByteBuf(int)
io.netty.bootstrap.Bootstrap.connect()
io.netty.buffer.CompositeByteBuf.writerIndex(int)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEchoNotAutoRead()
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.createFrames(int)
io.netty.channel.DefaultChannelPromise.setSuccess()
io.netty.channel.AbstractChannel.estimatorHandle()
io.netty.channel.ChannelHandlerAdapter()
io.netty.bootstrap.Bootstrap.validate()
io.netty.buffer.AbstractByteBuf.writeInt(int)
io.netty.buffer.AbstractDerivedByteBuf.refCnt()
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.testsuite.transport.socket.SocketTestPermutation$2$1.toString()
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,boolean)
io.netty.testsuite.transport.socket.SocketBufReleaseTest$BufWriterHandler()
io.netty.channel.socket.oio.OioDatagramChannel.newSocket()
io.netty.channel.ThreadPerChannelEventLoop.register(io.netty.channel.Channel,io.netty.channel.ChannelPromise)
io.netty.bootstrap.AbstractBootstrap.toString()
io.netty.buffer.AbstractByteBuf.slice()
io.netty.channel.MultithreadEventLoopGroup.next()
io.netty.channel.oio.AbstractOioChannel.newUnsafe()
io.netty.bootstrap.ServerBootstrap.toString()
io.netty.testsuite.transport.socket.DatagramMulticastTest$MulticastTestHandler.await()
io.netty.testsuite.util.TestUtils.isSctpSupported()
io.netty.channel.DefaultChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.buffer.AbstractByteBufAllocator(boolean)
io.netty.channel.socket.nio.NioSocketChannel.isActive()
io.netty.testsuite.transport.socket.SocketTestPermutation.datagram()
io.netty.testsuite.transport.socket.SocketTestPermutation$3.newInstance()
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt()
io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTlsNotAutoRead()
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho()
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTlsNotAutoRead(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.DefaultChannelHandlerContext(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)
io.netty.channel.DefaultChannelPromise(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)
io.netty.channel.AbstractChannel.isRegistered()
io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(io.netty.channel.ChannelHandlerContext)
io.netty.channel.DefaultMessageSizeEstimator(int)
io.netty.channel.group.DefaultChannelGroup(java.lang.String,io.netty.util.concurrent.EventExecutor)
io.netty.buffer.SlicedByteBuf(io.netty.buffer.ByteBuf,int,int)
io.netty.testsuite.transport.socket.SocketTestPermutation.combo(java.util.List,java.util.List)
io.netty.testsuite.transport.socket.SocketTestPermutation()
io.netty.bootstrap.Bootstrap.doConnect(java.net.SocketAddress,java.net.SocketAddress)
io.netty.testsuite.transport.udt.UDTClientServerConnectionTest$Server.waitForRunning(boolean)
io.netty.channel.ChannelOutboundBuffer.newInstance(io.netty.channel.AbstractChannel)
io.netty.testsuite.transport.socket.SocketTestPermutation$7.newInstance()
io.netty.channel.DefaultChannelPromise.checkDeadLock()
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho()
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,io.netty.channel.ChannelPromise)
io.netty.channel.FixedRecvByteBufAllocator(int)
io.netty.buffer.AbstractByteBuf.writeByte(int)
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.bootstrap.Bootstrap.toString()
io.netty.buffer.PoolThreadCache.createNormalCaches(int,int,io.netty.buffer.PoolArena)
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.buffer.CompositeByteBuf.addComponent(io.netty.buffer.ByteBuf)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.testsuite.transport.socket.SocketStringEchoTest.testStringEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap)
io.netty.channel.socket.nio.NioSocketChannel.javaChannel()
io.netty.channel.DefaultChannelPromise.sync()
io.netty.buffer.AbstractByteBuf.order(java.nio.ByteOrder)
io.netty.channel.AbstractChannel$AbstractUnsafe.register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise)
io.netty.buffer.SlicedByteBuf.slice(int,int)
io.netty.buffer.AbstractByteBuf.checkIndex(int,int)
io.netty.buffer.AbstractByteBuf.writerIndex()
io.netty.testsuite.transport.socket.SocketStartTlsTest.testStartTls()
io.netty.testsuite.transport.socket.AbstractDatagramTest.newFactories()
io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig.setSoTimeout(int)
io.netty.buffer.UnpooledUnsafeDirectByteBuf.deallocate()
io.netty.channel.socket.DefaultServerSocketChannelConfig(io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket)
io.netty.channel.AbstractChannel$AbstractUnsafe$1(io.netty.channel.AbstractChannel.AbstractUnsafe,io.netty.channel.ChannelPromise)
io.netty.channel.DefaultChannelPipeline.writeAndFlush(java.lang.Object)
io.netty.channel.DefaultChannelPipeline.generateName(io.netty.channel.ChannelHandler)
io.netty.channel.SingleThreadEventLoop.register(io.netty.channel.Channel)
io.netty.channel.nio.AbstractNioMessageChannel.newUnsafe()
io.netty.channel.MultithreadEventLoopGroup.register(io.netty.channel.Channel)
io.netty.channel.oio.AbstractOioChannel.isCompatible(io.netty.channel.EventLoop)
io.netty.channel.ChannelOutboundBuffer$1.newObject(io.netty.util.Recycler.Handle)
io.netty.channel.nio.NioEventLoop.wakeup(boolean)
io.netty.channel.socket.nio.NioServerSocketChannel.newSocket(java.nio.channels.spi.SelectorProvider)
io.netty.channel.DefaultChannelConfig.validate(io.netty.channel.ChannelOption,java.lang.Object)
io.netty.channel.socket.oio.OioDatagramChannel(java.net.MulticastSocket)
io.netty.channel.socket.nio.NioDatagramChannel.joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface)
io.netty.bootstrap.AbstractBootstrap.register()
io.netty.buffer.UnpooledHeapByteBuf.copy(int,int)
io.netty.buffer.EmptyByteBuf(io.netty.buffer.ByteBufAllocator,java.nio.ByteOrder)
io.netty.testsuite.transport.socket.SocketSslEchoTest.testSslEcho()
io.netty.channel.nio.AbstractNioByteChannel.newUnsafe()
io.netty.channel.DefaultChannelPromise.await()
io.netty.channel.socket.DefaultDatagramChannelConfig.setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator)
io.netty.buffer.SlicedByteBuf.order()
io.netty.buffer.AbstractByteBuf.readableBytes()
io.netty.channel.ChannelOutboundBuffer(io.netty.util.Recycler.Handle)
io.netty.channel.DefaultChannelPromise.addListener(io.netty.util.concurrent.GenericFutureListener)
io.netty.buffer.CompositeByteBuf.addComponent0(int,io.netty.buffer.ByteBuf)
io.netty.channel.DefaultChannelPipeline.checkMultiplicity(io.netty.channel.ChannelHandlerContext)
io.netty.channel.ChannelOutboundBuffer$Entry(io.netty.channel.ChannelOutboundBuffer.Entry)
io.netty.channel.SingleThreadEventLoop.wakesUpForTask(java.lang.Runnable)
io.netty.buffer.AbstractByteBuf(int)
io.netty.channel.DefaultChannelPipeline.context(java.lang.Class)
io.netty.channel.DefaultChannelPromise.executor()
io.netty.channel.AbstractChannel$CloseFuture(io.netty.channel.AbstractChannel)
io.netty.testsuite.transport.socket.SocketSpdyEchoTest.testSpdyEcho(io.netty.bootstrap.ServerBootstrap,io.netty.bootstrap.Bootstrap,io.netty.handler.codec.spdy.SpdyVersion,boolean)
0.05
