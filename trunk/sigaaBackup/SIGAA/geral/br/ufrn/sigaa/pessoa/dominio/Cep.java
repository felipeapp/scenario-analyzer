/*
 * Sistema Integrado de Gestão de Atividades Acadêmicas - SIGAA
 * Superintendência de Informática - UFRN
 *
 * Created on '13/09/2006'
 *
 */
package br.ufrn.sigaa.pessoa.dominio;

// Generated 13/09/2006 08:49:22 by Hibernate Tools 3.1.0.beta5

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import br.ufrn.arq.dominio.PersistDB;
import br.ufrn.arq.util.EqualsUtil;
import br.ufrn.arq.util.HashCodeUtil;
import br.ufrn.sigaa.dominio.UnidadeFederativa;

/**
 * Cep generated by hbm2java
 */
@Entity
@Table(name = "cep", uniqueConstraints = {})
public class Cep implements PersistDB {

	// Fields    

	private int id;
	
	private int numero;

	private UnidadeFederativa unidadeFederativa;

	private Pais pais;

	private TipoLogradouro tipoLogradouro;

	private Municipio municipio;

	private String logradouro;

	private String bairro;

	// Constructors

	/** default constructor */
	public Cep() {
	}

	
	/** default minimal constructor */
	public Cep(int id) {
		this.id = id;
	}
	
	/** minimal constructor */
	public Cep(int id, int cep) {
		this.numero = cep;
		this.id = id;
	}

	/** full constructor */
	public Cep(int id, int cep, UnidadeFederativa unidadeFederativa, Pais pais,
			TipoLogradouro tipoLogradouro, Municipio municipio,
			String logradouro, String bairro) {
		this.id = id;
		this.numero = cep;
		this.unidadeFederativa = unidadeFederativa;
		this.pais = pais;
		this.tipoLogradouro = tipoLogradouro;
		this.municipio = municipio;
		this.logradouro = logradouro;
		this.bairro = bairro;
	}

	// Property accessors
	@Id @GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Column(name = "id_cep", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.numero;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "numero", unique = true, nullable = false, insertable = true, updatable = true)
	public int getNumero() {
		return this.numero;
	}

	public void setNumero(int cep) {
		this.numero = cep;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "id_unidade_federativa", unique = false, nullable = true, insertable = true, updatable = true)
	public UnidadeFederativa getUnidadeFederativa() {
		return this.unidadeFederativa;
	}

	public void setUnidadeFederativa(UnidadeFederativa unidadeFederativa) {
		this.unidadeFederativa = unidadeFederativa;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pais", unique = false, nullable = true, insertable = true, updatable = true)
	public Pais getPais() {
		return this.pais;
	}

	public void setPais(Pais pais) {
		this.pais = pais;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "id_tipologradouro", unique = false, nullable = true, insertable = true, updatable = true)
	public TipoLogradouro getTipoLogradouro() {
		return this.tipoLogradouro;
	}

	public void setTipoLogradouro(TipoLogradouro tipoLogradouro) {
		this.tipoLogradouro = tipoLogradouro;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "id_municipio", unique = false, nullable = true, insertable = true, updatable = true)
	public Municipio getMunicipio() {
		return this.municipio;
	}

	public void setMunicipio(Municipio municipio) {
		this.municipio = municipio;
	}

	@Column(name = "logradouro", unique = false, nullable = true, insertable = true, updatable = true, length = 120)
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "bairro", unique = false, nullable = true, insertable = true, updatable = true, length = 80)
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsUtil.testEquals(this, obj, "id");
	}
	
	@Override
	public int hashCode() {
		return HashCodeUtil.hashAll(id);
	}
	
}
