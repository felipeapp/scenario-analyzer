package br.ufrn.sigaa.ensino.tecnico.dominio;

// Generated 13/09/2006 08:49:22 by Hibernate Tools 3.1.0.beta5

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import br.ufrn.arq.dominio.PersistDB;
import br.ufrn.arq.util.EqualsUtil;
import br.ufrn.arq.util.HashCodeUtil;


/**
 * Tipo de modalidade de um curso técnico
 * ModalidadeCursoTecnico generated by hbm2java
 */
@Entity
@Table(name = "modalidade_curso_tecnico", schema = "tecnico", uniqueConstraints = {})
public class ModalidadeCursoTecnico implements PersistDB {

	/** Indica quais modalidades existentes. */
	public static final int COCOMITANTE = 1;
	public static final int INTEGRADO = 2;
	public static final int SUBSEQUENTE = 3;
	
	/** Chave primária. */
	private int id;

	/** Descrição da Modalidade. */
	private String descricao;

	// Constructors

	/** default constructor */
	public ModalidadeCursoTecnico() {
	}

	/** minimal constructor */
	public ModalidadeCursoTecnico(int idTipoModalidade) {
		this.id = idTipoModalidade;
	}

	/** minimal constructor */
	public ModalidadeCursoTecnico(int idTipoModalidade, String descricao) {
		this.id = idTipoModalidade;
		this.descricao = descricao;
	}

	// Property accessors
	@Id @GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Column(name = "id_modalidade_curso_tecnico", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int idTipoModalidade) {
		this.id = idTipoModalidade;
	}

	@Column(name = "descricao", unique = false, nullable = false, insertable = true, updatable = true, length = 80)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsUtil.testEquals(this, obj, "id");
	}
	
	@Override
	public int hashCode() {
		return HashCodeUtil.hashAll(id);
	}
	
}
